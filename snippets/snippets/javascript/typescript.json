{
    "Constructor": {
        "prefix": "constructor",
        "body": [
            "/**",
            " *",
            " */",
            "constructor() {",
            "\tsuper();",
            "\t$0",
            "}"
        ],
        "description": "Constructor"
    },
    "Class Definition": {
        "prefix": "class",
        "body": [
            "class ${1:name} {",
            "\tconstructor(${2:parameters}) {",
            "\t\t$0",
            "\t}",
            "}"
        ],
        "description": "Class Definition"
    },
    "Interface Definition": {
        "prefix": "interface",
        "body": ["interface ${1:name} {", "\t$0", "}"],
        "description": "Interface Definition"
    },
    "Import external module.": {
        "prefix": "import",
        "body": ["import { $0 } from \"${1:module}\";"],
        "description": "Import external module."
    },
    "For Loop": {
        "prefix": "for",
        "body": [
            "for (let ${1:index} = 0; ${1:index} < ${2:array}.length; ${1:index}++) {",
            "\tconst ${3:element} = ${2:array}[${1:index}];",
            "\t$0",
            "}"
        ],
        "description": "For Loop"
    },
    "For-In Loop": {
        "prefix": "forin",
        "body": [
            "for (const ${1:key} in ${2:object}) {",
            "\tif (${2:object}.hasOwnProperty(${1:key})) {",
            "\t\tconst ${3:element} = ${2:object}[${1:key}];",
            "\t\t$0",
            "\t}",
            "}"
        ],
        "description": "For-In Loop"
    },
    "For-Of Loop": {
        "prefix": "forof",
        "body": ["for (const ${1:iterator} of ${2:object}) {", "\t$0", "}"],
        "description": "For-Of Loop"
    },
    "Function Statement": {
        "prefix": "function",
        "body": ["function ${1:name}(${2:params}:${3:type}) {", "\t$0", "}"],
        "description": "Function Statement"
    },
    "If Statement": {
        "prefix": "if",
        "body": ["if (${1:condition}) {", "\t$0", "}"],
        "description": "If Statement"
    },
    "If-Else Statement": {
        "prefix": "ifelse",
        "body": ["if (${1:condition}) {", "\t$0", "} else {", "\t", "}"],
        "description": "If-Else Statement"
    },
    "Switch Statement": {
        "prefix": "switch",
        "body": [
            "switch (${1:key}) {",
            "\tcase ${2:value}:",
            "\t\t$0",
            "\t\tbreak;",
            "",
            "\tdefault:",
            "\t\tbreak;",
            "}"
        ],
        "description": "Switch Statement"
    },
    "While Statement": {
        "prefix": "while",
        "body": ["while (${1:condition}) {", "\t$0", "}"],
        "description": "While Statement"
    },
    "Do-While Statement": {
        "prefix": "dowhile",
        "body": ["do {", "\t$0", "} while (${1:condition});"],
        "description": "Do-While Statement"
    },
    "Try-Catch Statement": {
        "prefix": "trycatch",
        "body": ["try {", "\t$0", "} catch (${1:error}) {", "\t", "}"],
        "description": "Try-Catch Statement"
    }
}
