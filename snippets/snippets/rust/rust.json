{
    "print": {
        "prefix": "print",
        "body": ["print!(\"${1}\")"],
        "description": "print!"
    },
    "println": {
        "prefix": "println",
        "body": ["println!(\"${1}\")"],
        "description": "println!"
    },
    "format": {
        "prefix": "format",
        "body": ["format!(\"${1}\")"],
        "description": "format!"
    },
    "derive": {
        "prefix": "derive",
        "body": ["#[derive(${1})]"],
        "description": "#[derive(â€¦)]"
    },
    "else": {
        "prefix": "else",
        "body": ["else {", "    ${1}", "}"],
        "description": "else block"
    },
    "enum": {
        "prefix": "enum",
        "body": ["enum ${1} {", "    ${2},", "}"],
        "description": "enum declaration"
    },
    "fn": {
        "prefix": "fn",
        "body": ["fn ${1}(${2}: ${3}) -> ${4} {", "    ${5}", "}"],
        "description": "function declaration"
    },
    "for": {
        "prefix": "for",
        "body": ["for ${1} in ${2} {", "    ${3}", "}"],
        "description": "for"
    },
    "iflet": {
        "prefix": "iflet",
        "body": ["if let ${1} = ${2} {", "    ${0}", "}"],
        "description": "if let"
    },
    "if": {
        "prefix": "if",
        "body": ["if ${1} {", "    ${2}", "}"],
        "description": "if"
    },
    "impltrait": {
        "prefix": "implfor",
        "body": ["impl ${1} for ${2} {", "    ${3}", "}"],
        "description": "implement trait for type statement"
    },
    "impl": {
        "prefix": "impl",
        "body": ["impl ${1} {", "    ${2}", "}"],
        "description": "implement statement"
    },
    "loop": {
        "prefix": "loop",
        "body": ["loop {", "    ${2}", "}"],
        "description": "loop"
    },
    "main": {
        "prefix": "main",
        "body": ["fn main() {", "    ${1}", "}"],
        "description": "function main declaration"
    },
    "match": {
        "prefix": "matchsn",
        "body": [
            "match ${1} {",
            "    Some(${2}) => ${3},",
            "    None => ${4},",
            "}"
        ],
        "description": "match"
    },
    "match1": {
        "prefix": "match1",
        "body": ["match ${1} {", "    ${2} => ${3},", "    _ => ${4},", "}"],
        "description": "match"
    },
    "match2": {
        "prefix": "match2",
        "body": [
            "match ${1} {",
            "    ${2} => ${3},",
            "    ${4} => ${5},",
            "    _ => ${6},",
            "}"
        ],
        "description": "match"
    },
    "match3": {
        "prefix": "match3",
        "body": [
            "match ${1} {",
            "    ${2} => ${3},",
            "    ${4} => ${5},",
            "    ${6} => ${7},",
            "    _ => ${8},",
            "}"
        ],
        "description": "match"
    },
    "match4": {
        "prefix": "match4",
        "body": [
            "match ${1} {",
            "    ${2} => ${3},",
            "    ${4} => ${5},",
            "    ${6} => ${7},",
            "    ${8} => ${9},",
            "    _ => ${10},",
            "}"
        ],
        "description": "match"
    },
    "match5": {
        "prefix": "match5",
        "body": [
            "match ${1} {",
            "    ${2} => ${3},",
            "    ${4} => ${5},",
            "    ${6} => ${7},",
            "    ${8} => ${9},",
            "    ${10} => ${11},",
            "    _ => ${12},",
            "}"
        ],
        "description": "match"
    },
    "struct": {
        "prefix": "struct",
        "body": ["struct ${1} {", "    ${2}: ${3},", "}"],
        "description": "struct"
    },
    "test": {
        "prefix": "test",
        "body": ["#[test]", "fn ${1}() {", "    ${2}", "}"],
        "description": "test"
    },
    "trait": {
        "prefix": "trait",
        "body": ["trait ${1} {", "    ${2}", "}", ""],
        "description": "trait"
    },
    "whilelet": {
        "prefix": "whilelet",
        "body": ["while let ${1} = ${2} {", "    ${0}", "}"],
        "description": "while let"
    },
    "while": {
        "prefix": "while",
        "body": ["while ${1} {", "    ${2}", "}"],
        "description": "while"
    }
}
