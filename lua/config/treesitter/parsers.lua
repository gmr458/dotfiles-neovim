local M = {}

local utils = require("config.utils")

local list = {
  -- "agda",
  -- "arduino",
  "astro",
  -- "awk",
  "bash",
  -- "beancount",
  -- "bibtex",
  -- "blueprint",
  "c",
  "c_sharp",
  -- "clojure",
  "cmake",
  -- "comment",
  -- "commonlisp",
  -- "cooklang",
  "cpp",
  "css",
  -- "cuda",
  -- "d",
  "dart",
  -- "devicetree",
  "diff",
  "dockerfile",
  -- "dot",
  -- "ebnf",
  -- "eex",
  -- "elixir",
  -- "elm",
  -- "elvish",
  -- "embedded_template",
  -- "erlang",
  -- "fennel",
  -- "fish",
  -- "foam",
  -- "fortran",
  -- "fusion",
  -- "gdscript",
  "git_rebase",
  "gitattributes",
  "gitcommit",
  "gitignore",
  -- "gleam",
  -- "glimmer",
  -- "glsl",
  "go",
  -- "godot_resource",
  "gomod",
  -- "gowork",
  "graphql",
  -- "hack",
  -- "haskell",
  -- "hcl",
  -- "heex",
  -- "help",
  -- "hjson",
  -- "hlsl",
  -- "hocon",
  "html",
  -- "http",
  "java",
  "javascript",
  -- "jq",
  -- "jsdoc",
  "json",
  -- "json5",
  "jsonc",
  -- "jsonnet",
  -- "julia",
  "kotlin",
  -- "lalrpop",
  "latex",
  -- "ledger",
  -- "llvm",
  "lua",
  -- "m68k",
  "make",
  -- "markdown",
  -- "markdown_inline",
  -- "menhir",
  -- "mermaid",
  "meson",
  -- "nickel",
  "ninja",
  "nix",
  -- "norg",
  -- "ocaml",
  -- "ocaml_interface",
  -- "ocamllex",
  -- "org",
  -- "pascal",
  -- "perl",
  "php",
  -- "phpdoc",
  -- "pioasm",
  -- "prisma",
  "proto",
  "pug",
  "python",
  -- "ql",
  -- "qmljs",
  "query",
  -- "r",
  -- "racket",
  "rasi",
  "regex",
  -- "rego",
  -- "rnoweb",
  -- "rst",
  "ruby",
  "rust",
  -- "scala",
  "scheme",
  "scss",
  -- "slint",
  -- "solidity",
  -- "sparql",
  "sql",
  -- "supercollider",
  -- "surface",
  "svelte",
  -- "swift",
  -- "sxhkdrc",
  -- "teal",
  -- "tiger",
  -- "tlaplus",
  -- "todotxt",
  "toml",
  "tsx",
  -- "turtle",
  -- "twig",
  "typescript",
  -- "v",
  -- "vala",
  -- "verilog",
  -- "vhs",
  "vim",
  -- "vimdoc",
  "vue",
  -- "wgsl",
  "yaml",
  -- "yang",
  -- "zig",
}

function M.install_automatically()
  if vim.fn.has("win32") == 1 or utils.running_wsl() or utils.running_android() then
    return {}
  end

  return list
end

return M
